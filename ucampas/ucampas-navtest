#!/usr/bin/perl
# ucampas-navtest -- test if a list of *-b.html files are in the same NavTree
#
#
# http://www.cl.cam.ac.uk/local/web/ucampas/
#
# Markus Kuhn -- http://www.cl.cam.ac.uk/~mgk25/

# this software requires Perl 5.8.1 or newer
require 5.008_001;

# determine location of ucampas installation directory from
# the location of this file (provided in $0)
my $ucampas_dir;
BEGIN {
    $ucampas_dir = $0;
    # follow any symbolic links
    while (-l $ucampas_dir) {
	my $link = readlink($ucampas_dir);
	if ($link =~ /^\//) {
	    $ucampas_dir = $link;
	} else {
	    $ucampas_dir =~ s/\/[^\/]*\z//; # strip off filename
	    $ucampas_dir = "$ucampas_dir/$link";
	}
    }
    $ucampas_dir =~ s/\/[^\/]*\z//; # strip off filename
    # add some subdirectories of the installation directory
    # to the package search path
    unshift @INC, $ucampas_dir, "$ucampas_dir/perl-PlexTree";
}

use strict;

use NavTree;
use PlexTree;

# Parse the command-line options

my $usage = <<'EOT';
ucampas-navtest -- test if a list of *-b.html files are all in the same NavTree

Usage examples:

  ucampas-navtest *-b.{html,php}
  find -name '*-b.html' -print0 | ucampas-navtest -0
  find -name .svn -prune -o -iregex '.*-b\.\(html?\|php\)' -print0 | \
    ucampas-navtest -0

Normal options:

  -s     Read a list of files to be checked as linefeed-terminated strings
         from stdin

  -0     Read a list of files to be checked as zero-terminated strings
         from stdin (e.g. as written by "find -print0")

EOT

# parse the global uconfig.txt file
NavTree::set_global_uconfig("$ucampas_dir/uconfig.txt");

my @fn = ();  # list of files to be checked

my $parse_options = 1;
while (@ARGV) {
    $_ = shift @ARGV;
    if ($parse_options && /^-/) {
	if (/^-s\z/) {
	    while (defined($_ = <>)) {
		chomp;
		push @fn, $_;
	    }
	} elsif (/^-0\z/) {
	    local $/ = "\0";
	    while (defined($_ = <>)) {
		chomp;
		push @fn, $_;
	    }
	} elsif (/^-h/ || /^--help/) {
	    print $usage;
	    exit 0;
	} elsif (/^--\z/) {
	    $parse_options = 0;
	} else {
	    die("Unknown command line option '$_'!\n\n" . $usage);
	}
    } else {
	push @fn, $_;
    }
}

my $cur;
my $top;
my @missing = ();
foreach my $fn (@fn) {
    s/^\.\///;  # remove the redundant ./ prefix found in "find" output
    #print $fn . "\n";
    $fn = NavTree::preprocess_filename($fn, 'output');
    $cur = NavTree::find_file($fn);
    if (defined $top) {
	if ($top->cid != $cur->cid || $cur->get('unreachable')) {
	    push @missing, $fn;
	}
    } else {
	$top = $cur->top;
    }
}

if (@missing) {
    print STDERR "\nWarning: these files were not found in the Ucampas " .
	"navigation tree starting at\n" . $top->fpath . "uconfig.txt:\n\n" .
	join("\n", @missing) . "\n\nPlease update uconfig.txt appropriately.\n"
}

exit(@missing);
